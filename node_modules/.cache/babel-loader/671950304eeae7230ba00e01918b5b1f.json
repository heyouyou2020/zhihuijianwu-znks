{"remainingRequest":"C:\\Users\\小没没\\Desktop\\zhihuiks\\lvshipingtai\\frontend-web\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\小没没\\Desktop\\zhihuiks\\lvshipingtai\\frontend-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\小没没\\Desktop\\zhihuiks\\lvshipingtai\\frontend-web\\src\\permission.js","dependencies":[{"path":"C:\\Users\\小没没\\Desktop\\zhihuiks\\lvshipingtai\\frontend-web\\src\\permission.js","mtime":1611737945667},{"path":"C:\\Users\\小没没\\Desktop\\zhihuiks\\lvshipingtai\\frontend-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\小没没\\Desktop\\zhihuiks\\lvshipingtai\\frontend-web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\小没没\\Desktop\\zhihuiks\\lvshipingtai\\frontend-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/\\u5C0F\\u6CA1\\u6CA1/Desktop/zhihuiks/lvshipingtai/frontend-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport router from \"./router\"; // import store from './store'\n// import { Message } from 'element-ui'\n\nimport NProgress from 'nprogress'; // progress bar\n\nimport 'nprogress/nprogress.css'; // progress bar style\n\nimport getPageTitle from '@/utils/get-page-title';\nNProgress.configure({\n  showSpinner: false\n}); // NProgress Configuration\n\nvar whiteList = ['/login', '/auth-redirect']; // no redirect whitelist\n\nvar accessRoutes = [];\nrouter.beforeEach( /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(to, from, next) {\n    var hasToken;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            NProgress.start();\n            document.title = getPageTitle(to.meta.title);\n            /* z注释 start */\n            // if (accessRoutes.length === 0) {\n            //   accessRoutes = await store.dispatch('permission/generateRoutes', [])\n            //   router.addRoutes(accessRoutes)\n            // }\n            // next()\n\n            /* z注释 end*/\n\n            hasToken = sessionStorage.getItem('kongshentoken');\n\n            if (hasToken) {\n              if (to.path === '/login') {\n                next({\n                  path: '/'\n                }); // next({ path: '/login' })\n\n                NProgress.done();\n              } else {\n                // accessRoutes = JSON.parse(localStorage.getItem('routers'))\n                // router.addRoutes(accessRoutes)\n                next();\n                /* z注释 start */\n\n                /* 替换新的逻辑，当前路由和返回的menulist递归对比，看是否存在menulist中，若存在则继续，不存在则跳到404或登录*/\n                // const hasRoles = store.getters.roles && store.getters.roles.length > 0\n                // if (hasRoles) {\n                //   next()\n                // } else {\n                //   next()\n                //   // try {\n                //   //   const { roles } = await store.dispatch('user/getInfo')\n                //   //   const accessRoutes = await store.dispatch('permission/generateRoutes', roles)\n                //   //   router.addRoutes(accessRoutes)\n                //   //   next({ ...to, replace: true })\n                //   // } catch (error) {\n                //   //   await store.dispatch('user/resetToken')\n                //   //   Message.error(error || 'Has Error')\n                //   //   next(`/login?redirect=${to.path}`)\n                //   //   NProgress.done()\n                //   // }\n                // }\n\n                /* z注释 end*/\n              }\n            } else {\n              if (whiteList.indexOf(to.path) !== -1) {\n                next();\n              } else {\n                next({\n                  path: '/login'\n                }); // next(`/login?redirect=${to.path}`)\n\n                NProgress.done();\n              }\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}());\nrouter.afterEach(function () {\n  // finish progress bar\n  NProgress.done();\n});",null]}