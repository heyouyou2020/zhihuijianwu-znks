{"remainingRequest":"C:\\Users\\小没没\\Desktop\\zhihuiks\\lvshipingtai\\frontend-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\小没没\\Desktop\\zhihuiks\\lvshipingtai\\frontend-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\小没没\\Desktop\\zhihuiks\\lvshipingtai\\frontend-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\小没没\\Desktop\\zhihuiks\\lvshipingtai\\frontend-web\\src\\components\\Charts\\GradientBar.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\小没没\\Desktop\\zhihuiks\\lvshipingtai\\frontend-web\\src\\components\\Charts\\GradientBar.vue","mtime":1600928645034},{"path":"C:\\Users\\小没没\\Desktop\\zhihuiks\\lvshipingtai\\frontend-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\小没没\\Desktop\\zhihuiks\\lvshipingtai\\frontend-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\小没没\\Desktop\\zhihuiks\\lvshipingtai\\frontend-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\小没没\\Desktop\\zhihuiks\\lvshipingtai\\frontend-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"C:/Users/\\u5C0F\\u6CA1\\u6CA1/Desktop/zhihuiks/lvshipingtai/frontend-web/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _echarts = _interopRequireDefault(require(\"echarts\"));\n\nvar _resize = _interopRequireDefault(require(\"./mixins/resize\"));\n\n//\n//\n//\n//\nvar _default2 = {\n  mixins: [_resize.default],\n  props: {\n    chartData: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    xAxisData: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    // 是否展示图例 默认不展示\n    isShowLegend: {\n      type: Boolean,\n      default: false\n    },\n    colorArr: {\n      type: Array,\n      default: function _default() {\n        return [{\n          top: '#4185ef',\n          bottom: 'rgba(65, 133, 239, 0.1)'\n        }, {\n          top: '#ffbe3f',\n          bottom: 'rgba(255, 190, 63, 0.1)'\n        }, {\n          top: '#38d7b7',\n          bottom: 'rgba(56, 215, 183, 0.1)'\n        }, {\n          top: '#ffbe3f',\n          bottom: 'rgba(255, 190, 63, 0.1)'\n        }, {\n          top: '#4185ef',\n          bottom: 'rgba(65, 133, 239, 0.1)'\n        }, {\n          top: '#38d7b7',\n          bottom: 'rgba(56, 215, 183, 0.1)'\n        }];\n      }\n    },\n    className: {\n      type: String,\n      default: 'chart'\n    },\n    id: {\n      type: String,\n      default: 'chart'\n    },\n    width: {\n      type: String,\n      default: '200px'\n    },\n    height: {\n      type: String,\n      default: '200px'\n    },\n    titleText: {\n      type: String,\n      default: '案件数'\n    }\n  },\n  data: function data() {\n    return {\n      chart: null\n    };\n  },\n  mounted: function mounted() {\n    this.initChart();\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (!this.chart) {\n      return;\n    }\n\n    this.chart.dispose();\n    this.chart = null;\n  },\n  methods: {\n    initChart: function initChart() {\n      var _this2 = this;\n\n      var _this = this;\n\n      this.chart = _echarts.default.init(document.getElementById(this.id));\n      var seriesData = [];\n      var legendData = [];\n      this.chartData.forEach(function (item, index) {\n        legendData.push(item.name);\n        seriesData.push({\n          name: item.name,\n          type: item.type || 'bar',\n          barGap: '10%',\n          barMinWidth: 8,\n          barMaxWidth: 14,\n          data: item.data,\n          itemStyle: {\n            normal: {\n              color: function color(params) {\n                return new _echarts.default.graphic.LinearGradient(0, 0, 0, 1, [{\n                  offset: 0,\n                  color: _this.colorArr[index].top // 0% 处的颜色\n\n                }, {\n                  offset: 1,\n                  color: _this.colorArr[index].bottom // 100% 处的颜色\n\n                }], false);\n              },\n              barBorderRadius: [10, 10, 0, 0]\n            }\n          }\n        });\n      });\n      this.chart.setOption({\n        title: {\n          top: 0,\n          text: _this.titleText,\n          textStyle: {\n            fontWeight: 'normal',\n            fontSize: 16,\n            color: '#53668d'\n          },\n          left: '1%'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            // 坐标轴指示器，坐标轴触发有效\n            type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n\n          }\n        },\n        legend: {\n          show: _this.isShowLegend,\n          top: 6,\n          icon: 'rect',\n          itemWidth: 14,\n          itemHeight: 5,\n          itemGap: 13,\n          data: legendData,\n          left: 'center',\n          textStyle: {\n            fontSize: 12,\n            color: '#4f5e7b'\n          }\n        },\n        grid: {\n          top: 50,\n          left: '2%',\n          right: '2%',\n          bottom: 0,\n          containLabel: true\n        },\n        xAxis: [{\n          type: 'category',\n          boundaryGap: true,\n          snap: true,\n          axisTick: {\n            show: false\n          },\n          axisLabel: {\n            interval: 0,\n            rotate: 50\n          },\n          axisLine: {\n            show: false,\n            lineStyle: {\n              color: '#53668d'\n            }\n          },\n          data: _this.xAxisData\n        }],\n        yAxis: [{\n          type: 'value',\n          axisTick: {\n            show: false\n          },\n          splitLine: {\n            lineStyle: {\n              color: '#f0f0f0'\n            }\n          },\n          axisLine: {\n            show: false,\n            lineStyle: {\n              color: '#53668d'\n            }\n          },\n          axisLabel: {\n            inside: false,\n            formatter: '{value}\\n'\n          }\n        }],\n        series: seriesData\n      });\n      this.chart.on('click', function (params) {\n        _this2.$emit('clickBar', params);\n      });\n    }\n  }\n};\nexports.default = _default2;",{"version":3,"sources":["GradientBar.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAKA;;AACA;;;;;;gBAEA;AACA,EAAA,MAAA,EAAA,CAAA,eAAA,CADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAFA,KADA;AAKA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAFA,KALA;AASA;AACA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAVA;AAcA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA,oBAAA;AACA,eAAA,CAAA;AAAA,UAAA,GAAA,EAAA,SAAA;AAAA,UAAA,MAAA,EAAA;AAAA,SAAA,EAAA;AAAA,UAAA,GAAA,EAAA,SAAA;AAAA,UAAA,MAAA,EAAA;AAAA,SAAA,EAAA;AAAA,UAAA,GAAA,EAAA,SAAA;AAAA,UAAA,MAAA,EAAA;AAAA,SAAA,EAAA;AAAA,UAAA,GAAA,EAAA,SAAA;AAAA,UAAA,MAAA,EAAA;AAAA,SAAA,EAAA;AAAA,UAAA,GAAA,EAAA,SAAA;AAAA,UAAA,MAAA,EAAA;AAAA,SAAA,EAAA;AAAA,UAAA,GAAA,EAAA,SAAA;AAAA,UAAA,MAAA,EAAA;AAAA,SAAA,CAAA;AACA;AAJA,KAdA;AAoBA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KApBA;AAwBA,IAAA,EAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAxBA;AA4BA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KA5BA;AAgCA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAhCA;AAoCA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AApCA,GAFA;AA2CA,EAAA,IA3CA,kBA2CA;AACA,WAAA;AACA,MAAA,KAAA,EAAA;AADA,KAAA;AAGA,GA/CA;AAgDA,EAAA,OAhDA,qBAgDA;AACA,SAAA,SAAA;AACA,GAlDA;AAmDA,EAAA,aAnDA,2BAmDA;AACA,QAAA,CAAA,KAAA,KAAA,EAAA;AACA;AACA;;AACA,SAAA,KAAA,CAAA,OAAA;AACA,SAAA,KAAA,GAAA,IAAA;AACA,GAzDA;AA0DA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AAAA;;AACA,UAAA,KAAA,GAAA,IAAA;;AACA,WAAA,KAAA,GAAA,iBAAA,IAAA,CAAA,QAAA,CAAA,cAAA,CAAA,KAAA,EAAA,CAAA,CAAA;AACA,UAAA,UAAA,GAAA,EAAA;AACA,UAAA,UAAA,GAAA,EAAA;AACA,WAAA,SAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA,KAAA,EAAA;AACA,QAAA,UAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA;AACA,QAAA,UAAA,CAAA,IAAA,CAAA;AACA,UAAA,IAAA,EAAA,IAAA,CAAA,IADA;AAEA,UAAA,IAAA,EAAA,IAAA,CAAA,IAAA,IAAA,KAFA;AAGA,UAAA,MAAA,EAAA,KAHA;AAIA,UAAA,WAAA,EAAA,CAJA;AAKA,UAAA,WAAA,EAAA,EALA;AAMA,UAAA,IAAA,EAAA,IAAA,CAAA,IANA;AAOA,UAAA,SAAA,EAAA;AACA,YAAA,MAAA,EAAA;AACA,cAAA,KAAA,EAAA,eAAA,MAAA,EAAA;AACA,uBAAA,IAAA,iBAAA,OAAA,CAAA,cAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA;AACA,kBAAA,MAAA,EAAA,CADA;AAEA,kBAAA,KAAA,EAAA,KAAA,CAAA,QAAA,CAAA,KAAA,EAAA,GAFA,CAEA;;AAFA,iBAAA,EAGA;AACA,kBAAA,MAAA,EAAA,CADA;AAEA,kBAAA,KAAA,EAAA,KAAA,CAAA,QAAA,CAAA,KAAA,EAAA,MAFA,CAEA;;AAFA,iBAHA,CAAA,EAMA,KANA,CAAA;AAOA,eATA;AAUA,cAAA,eAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA;AAVA;AADA;AAPA,SAAA;AAsBA,OAxBA;AAyBA,WAAA,KAAA,CAAA,SAAA,CAAA;AACA,QAAA,KAAA,EAAA;AACA,UAAA,GAAA,EAAA,CADA;AAEA,UAAA,IAAA,EAAA,KAAA,CAAA,SAFA;AAGA,UAAA,SAAA,EAAA;AACA,YAAA,UAAA,EAAA,QADA;AAEA,YAAA,QAAA,EAAA,EAFA;AAGA,YAAA,KAAA,EAAA;AAHA,WAHA;AAQA,UAAA,IAAA,EAAA;AARA,SADA;AAWA,QAAA,OAAA,EAAA;AACA,UAAA,OAAA,EAAA,MADA;AAEA,UAAA,WAAA,EAAA;AAAA;AACA,YAAA,IAAA,EAAA,QADA,CACA;;AADA;AAFA,SAXA;AAiBA,QAAA,MAAA,EAAA;AACA,UAAA,IAAA,EAAA,KAAA,CAAA,YADA;AAEA,UAAA,GAAA,EAAA,CAFA;AAGA,UAAA,IAAA,EAAA,MAHA;AAIA,UAAA,SAAA,EAAA,EAJA;AAKA,UAAA,UAAA,EAAA,CALA;AAMA,UAAA,OAAA,EAAA,EANA;AAOA,UAAA,IAAA,EAAA,UAPA;AAQA,UAAA,IAAA,EAAA,QARA;AASA,UAAA,SAAA,EAAA;AACA,YAAA,QAAA,EAAA,EADA;AAEA,YAAA,KAAA,EAAA;AAFA;AATA,SAjBA;AA+BA,QAAA,IAAA,EAAA;AACA,UAAA,GAAA,EAAA,EADA;AAEA,UAAA,IAAA,EAAA,IAFA;AAGA,UAAA,KAAA,EAAA,IAHA;AAIA,UAAA,MAAA,EAAA,CAJA;AAKA,UAAA,YAAA,EAAA;AALA,SA/BA;AAsCA,QAAA,KAAA,EAAA,CAAA;AACA,UAAA,IAAA,EAAA,UADA;AAEA,UAAA,WAAA,EAAA,IAFA;AAGA,UAAA,IAAA,EAAA,IAHA;AAIA,UAAA,QAAA,EAAA;AACA,YAAA,IAAA,EAAA;AADA,WAJA;AAOA,UAAA,SAAA,EAAA;AACA,YAAA,QAAA,EAAA,CADA;AAEA,YAAA,MAAA,EAAA;AAFA,WAPA;AAWA,UAAA,QAAA,EAAA;AACA,YAAA,IAAA,EAAA,KADA;AAEA,YAAA,SAAA,EAAA;AACA,cAAA,KAAA,EAAA;AADA;AAFA,WAXA;AAiBA,UAAA,IAAA,EAAA,KAAA,CAAA;AAjBA,SAAA,CAtCA;AAyDA,QAAA,KAAA,EAAA,CAAA;AACA,UAAA,IAAA,EAAA,OADA;AAEA,UAAA,QAAA,EAAA;AACA,YAAA,IAAA,EAAA;AADA,WAFA;AAKA,UAAA,SAAA,EAAA;AACA,YAAA,SAAA,EAAA;AACA,cAAA,KAAA,EAAA;AADA;AADA,WALA;AAUA,UAAA,QAAA,EAAA;AACA,YAAA,IAAA,EAAA,KADA;AAEA,YAAA,SAAA,EAAA;AACA,cAAA,KAAA,EAAA;AADA;AAFA,WAVA;AAgBA,UAAA,SAAA,EAAA;AACA,YAAA,MAAA,EAAA,KADA;AAEA,YAAA,SAAA,EAAA;AAFA;AAhBA,SAAA,CAzDA;AA8EA,QAAA,MAAA,EAAA;AA9EA,OAAA;AAgFA,WAAA,KAAA,CAAA,EAAA,CAAA,OAAA,EAAA,UAAA,MAAA,EAAA;AACA,QAAA,MAAA,CAAA,KAAA,CAAA,UAAA,EAAA,MAAA;AACA,OAFA;AAGA;AAlHA;AA1DA,C","sourcesContent":["<template>\r\n  <div :id=\"id\" :class=\"className\" :style=\"{height:height,width:width}\" />\r\n</template>\r\n// 渐变柱形图\r\n<script>\r\nimport echarts from 'echarts'\r\nimport resize from './mixins/resize'\r\n\r\nexport default {\r\n  mixins: [resize],\r\n  props: {\r\n    chartData: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    xAxisData: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    // 是否展示图例 默认不展示\r\n    isShowLegend: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    colorArr: {\r\n      type: Array,\r\n      default: function() {\r\n        return [{ top: '#4185ef', bottom: 'rgba(65, 133, 239, 0.1)' }, { top: '#ffbe3f', bottom: 'rgba(255, 190, 63, 0.1)' }, { top: '#38d7b7', bottom: 'rgba(56, 215, 183, 0.1)' }, { top: '#ffbe3f', bottom: 'rgba(255, 190, 63, 0.1)' }, { top: '#4185ef', bottom: 'rgba(65, 133, 239, 0.1)' }, { top: '#38d7b7', bottom: 'rgba(56, 215, 183, 0.1)' }]\r\n      },\r\n    },\r\n    className: {\r\n      type: String,\r\n      default: 'chart'\r\n    },\r\n    id: {\r\n      type: String,\r\n      default: 'chart'\r\n    },\r\n    width: {\r\n      type: String,\r\n      default: '200px'\r\n    },\r\n    height: {\r\n      type: String,\r\n      default: '200px'\r\n    },\r\n    titleText: {\r\n      type: String,\r\n      default: '案件数'\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      chart: null\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initChart()\r\n  },\r\n  beforeDestroy() {\r\n    if (!this.chart) {\r\n      return\r\n    }\r\n    this.chart.dispose()\r\n    this.chart = null\r\n  },\r\n  methods: {\r\n    initChart() {\r\n      const _this = this\r\n      this.chart = echarts.init(document.getElementById(this.id))\r\n      const seriesData = []\r\n      const legendData = []\r\n      this.chartData.forEach((item, index) => {\r\n        legendData.push(item.name)\r\n        seriesData.push({\r\n          name: item.name,\r\n          type: item.type || 'bar',\r\n          barGap: '10%',\r\n          barMinWidth: 8,\r\n          barMaxWidth: 14,\r\n          data: item.data,\r\n          itemStyle: {\r\n            normal: {\r\n              color: function(params) {\r\n                return new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                  offset: 0,\r\n                  color: _this.colorArr[index].top // 0% 处的颜色\r\n                }, {\r\n                  offset: 1,\r\n                  color: _this.colorArr[index].bottom// 100% 处的颜色\r\n                }], false)\r\n              },\r\n              barBorderRadius: [10, 10, 0, 0]\r\n            },\r\n          }\r\n        })\r\n      })\r\n      this.chart.setOption({\r\n        title: {\r\n          top: 0,\r\n          text: _this.titleText,\r\n          textStyle: {\r\n            fontWeight: 'normal',\r\n            fontSize: 16,\r\n            color: '#53668d'\r\n          },\r\n          left: '1%'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: { // 坐标轴指示器，坐标轴触发有效\r\n            type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\r\n          },\r\n        },\r\n        legend: {\r\n          show: _this.isShowLegend,\r\n          top: 6,\r\n          icon: 'rect',\r\n          itemWidth: 14,\r\n          itemHeight: 5,\r\n          itemGap: 13,\r\n          data: legendData,\r\n          left: 'center',\r\n          textStyle: {\r\n            fontSize: 12,\r\n            color: '#4f5e7b'\r\n          }\r\n        },\r\n        grid: {\r\n          top: 50,\r\n          left: '2%',\r\n          right: '2%',\r\n          bottom: 0,\r\n          containLabel: true\r\n        },\r\n        xAxis: [{\r\n          type: 'category',\r\n          boundaryGap: true,\r\n          snap: true,\r\n          axisTick: {\r\n            show: false\r\n          },\r\n          axisLabel: {\r\n            interval: 0,\r\n            rotate: 50,\r\n          },\r\n          axisLine: {\r\n            show: false,\r\n            lineStyle: {\r\n              color: '#53668d'\r\n            }\r\n          },\r\n          data: _this.xAxisData\r\n        }],\r\n        yAxis: [{\r\n          type: 'value',\r\n          axisTick: {\r\n            show: false\r\n          },\r\n          splitLine: {\r\n            lineStyle: {\r\n              color: '#f0f0f0'\r\n            }\r\n          },\r\n          axisLine: {\r\n            show: false,\r\n            lineStyle: {\r\n              color: '#53668d'\r\n            }\r\n          },\r\n          axisLabel: {\r\n            inside: false,\r\n            formatter: '{value}\\n'\r\n          }\r\n        }],\r\n        series: seriesData\r\n      })\r\n      this.chart.on('click', (params) => {\r\n        this.$emit('clickBar', params)\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/components/Charts"}]}