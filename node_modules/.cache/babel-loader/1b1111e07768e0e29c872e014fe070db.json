{"remainingRequest":"C:\\Users\\小没没\\Desktop\\zhihuiks\\lvshipingtai\\frontend-web\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\小没没\\Desktop\\zhihuiks\\lvshipingtai\\frontend-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\小没没\\Desktop\\zhihuiks\\lvshipingtai\\frontend-web\\src\\store\\modules\\user.js","dependencies":[{"path":"C:\\Users\\小没没\\Desktop\\zhihuiks\\lvshipingtai\\frontend-web\\src\\store\\modules\\user.js","mtime":1601027517472},{"path":"C:\\Users\\小没没\\Desktop\\zhihuiks\\lvshipingtai\\frontend-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\小没没\\Desktop\\zhihuiks\\lvshipingtai\\frontend-web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\小没没\\Desktop\\zhihuiks\\lvshipingtai\\frontend-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/\\u5C0F\\u6CA1\\u6CA1/Desktop/zhihuiks/lvshipingtai/frontend-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { login as _login, getUserMenuList } from '@/api/user';\nimport { getToken, setToken, removeToken, setUserId } from '@/utils/auth';\nimport router, { resetRouter } from '@/router';\nvar state = {\n  token: getToken(),\n  name: '',\n  avatar: '',\n  introduction: '',\n  roles: [{\n    name: 'admin'\n  }],\n  userInfo: '',\n  menuList: []\n};\nvar mutations = {\n  SET_TOKEN: function SET_TOKEN(state, token) {\n    state.token = token;\n  },\n  SET_INTRODUCTION: function SET_INTRODUCTION(state, introduction) {\n    state.introduction = introduction;\n  },\n  SET_NAME: function SET_NAME(state, name) {\n    state.name = name;\n  },\n  SET_AVATAR: function SET_AVATAR(state, avatar) {\n    state.avatar = avatar;\n  },\n  SET_ROLES: function SET_ROLES(state, roles) {\n    state.roles = roles;\n  },\n  SET_USERINFO: function SET_USERINFO(state, userInfo) {\n    state.userInfo = userInfo;\n  },\n  SET_MENULIST: function SET_MENULIST(state, menuList) {\n    state.menuList = menuList;\n  }\n};\nvar actions = {\n  // user login\n  login: function login(_ref, userInfo) {\n    var commit = _ref.commit;\n    var dlbm = userInfo.dlbm,\n        password = userInfo.password,\n        dwbm = userInfo.dwbm;\n    return new Promise(function (resolve, reject) {\n      _login({\n        dlbm: dlbm.trim(),\n        password: password,\n        dwbm: dwbm\n      }).then(function (response) {\n        var data = response.data;\n        debugger;\n        console.log(data);\n        commit('SET_TOKEN', data.token);\n        commit('SET_USERINFO', data.user);\n        setToken(data.token);\n        setUserId(data.user.id);\n        resolve();\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // get user menu\n  getMenu: function getMenu(_ref2) {\n    var commit = _ref2.commit,\n        state = _ref2.state;\n    return new Promise(function (resolve, reject) {\n      var params = {\n        userid: state.userInfo && state.userInfo.id\n      };\n      getUserMenuList(params).then(function (response) {\n        debugger;\n        var data = response.data;\n        commit('SET_MENULIST', data);\n        resolve(data);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // user logout\n  logout: function logout(_ref3) {\n    var commit = _ref3.commit,\n        state = _ref3.state,\n        dispatch = _ref3.dispatch;\n    return new Promise(function (resolve, reject) {\n      try {\n        commit('SET_TOKEN', '');\n        commit('SET_ROLES', []);\n        removeToken();\n        resetRouter();\n        resolve();\n      } catch (e) {\n        reject(e);\n      }\n    });\n  },\n  // remove token\n  resetToken: function resetToken(_ref4) {\n    var commit = _ref4.commit;\n    return new Promise(function (resolve) {\n      commit('SET_TOKEN', '');\n      commit('SET_ROLES', []);\n      removeToken();\n      resolve();\n    });\n  },\n  // dynamically modify permissions\n  changeRoles: function changeRoles(_ref5, role) {\n    var commit = _ref5.commit,\n        dispatch = _ref5.dispatch;\n    return new Promise( /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(resolve) {\n        var token, _yield$dispatch, roles, accessRoutes;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                token = role + '-token';\n                commit('SET_TOKEN', token);\n                setToken(token);\n                _context.next = 5;\n                return dispatch('getInfo');\n\n              case 5:\n                _yield$dispatch = _context.sent;\n                roles = _yield$dispatch.roles;\n                resetRouter(); // generate accessible routes map based on roles\n\n                _context.next = 10;\n                return dispatch('permission/generateRoutes', roles, {\n                  root: true\n                });\n\n              case 10:\n                accessRoutes = _context.sent;\n                // dynamically add accessible routes\n                router.addRoutes(accessRoutes); // reset visited views and cached views\n\n                dispatch('tagsView/delAllViews', null, {\n                  root: true\n                });\n                resolve();\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref6.apply(this, arguments);\n      };\n    }());\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  mutations: mutations,\n  actions: actions\n};",null]}