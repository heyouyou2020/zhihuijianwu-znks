{"remainingRequest":"C:\\Users\\小没没\\Desktop\\zhihuiks\\lvshipingtai\\frontend-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\小没没\\Desktop\\zhihuiks\\lvshipingtai\\frontend-web\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\小没没\\Desktop\\zhihuiks\\lvshipingtai\\frontend-web\\src\\permission.js","dependencies":[{"path":"C:\\Users\\小没没\\Desktop\\zhihuiks\\lvshipingtai\\frontend-web\\src\\permission.js","mtime":1611737945667},{"path":"C:\\Users\\小没没\\Desktop\\zhihuiks\\lvshipingtai\\frontend-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\小没没\\Desktop\\zhihuiks\\lvshipingtai\\frontend-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\小没没\\Desktop\\zhihuiks\\lvshipingtai\\frontend-web\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"C:/Users/\\u5C0F\\u6CA1\\u6CA1/Desktop/zhihuiks/lvshipingtai/frontend-web/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"C:/Users/\\u5C0F\\u6CA1\\u6CA1/Desktop/zhihuiks/lvshipingtai/frontend-web/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _router = _interopRequireDefault(require(\"./router\"));\n\nvar _nprogress = _interopRequireDefault(require(\"nprogress\"));\n\nrequire(\"nprogress/nprogress.css\");\n\nvar _getPageTitle = _interopRequireDefault(require(\"@/utils/get-page-title\"));\n\n// import store from './store'\n// import { Message } from 'element-ui'\n// progress bar\n// progress bar style\n_nprogress.default.configure({\n  showSpinner: false\n}); // NProgress Configuration\n\n\nvar whiteList = ['/login', '/auth-redirect']; // no redirect whitelist\n\nvar accessRoutes = [];\n\n_router.default.beforeEach( /*#__PURE__*/function () {\n  var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee(to, from, next) {\n    var hasToken;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _nprogress.default.start();\n\n            document.title = (0, _getPageTitle.default)(to.meta.title);\n            /* z注释 start */\n            // if (accessRoutes.length === 0) {\n            //   accessRoutes = await store.dispatch('permission/generateRoutes', [])\n            //   router.addRoutes(accessRoutes)\n            // }\n            // next()\n\n            /* z注释 end*/\n\n            hasToken = sessionStorage.getItem('kongshentoken');\n\n            if (hasToken) {\n              if (to.path === '/login') {\n                next({\n                  path: '/'\n                }); // next({ path: '/login' })\n\n                _nprogress.default.done();\n              } else {\n                // accessRoutes = JSON.parse(localStorage.getItem('routers'))\n                // router.addRoutes(accessRoutes)\n                next();\n                /* z注释 start */\n\n                /* 替换新的逻辑，当前路由和返回的menulist递归对比，看是否存在menulist中，若存在则继续，不存在则跳到404或登录*/\n                // const hasRoles = store.getters.roles && store.getters.roles.length > 0\n                // if (hasRoles) {\n                //   next()\n                // } else {\n                //   next()\n                //   // try {\n                //   //   const { roles } = await store.dispatch('user/getInfo')\n                //   //   const accessRoutes = await store.dispatch('permission/generateRoutes', roles)\n                //   //   router.addRoutes(accessRoutes)\n                //   //   next({ ...to, replace: true })\n                //   // } catch (error) {\n                //   //   await store.dispatch('user/resetToken')\n                //   //   Message.error(error || 'Has Error')\n                //   //   next(`/login?redirect=${to.path}`)\n                //   //   NProgress.done()\n                //   // }\n                // }\n\n                /* z注释 end*/\n              }\n            } else {\n              if (whiteList.indexOf(to.path) !== -1) {\n                next();\n              } else {\n                next({\n                  path: '/login'\n                }); // next(`/login?redirect=${to.path}`)\n\n                _nprogress.default.done();\n              }\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}());\n\n_router.default.afterEach(function () {\n  // finish progress bar\n  _nprogress.default.done();\n});",{"version":3,"sources":["C:/Users/小没没/Desktop/zhihuiks/lvshipingtai/frontend-web/src/permission.js"],"names":["NProgress","configure","showSpinner","whiteList","accessRoutes","router","beforeEach","to","from","next","start","document","title","meta","hasToken","sessionStorage","getItem","path","done","indexOf","afterEach"],"mappings":";;;;;;;;AAAA;;AAGA;;AACA;;AACA;;AAJA;AACA;AACkC;AACD;AAGjCA,mBAAUC,SAAV,CAAoB;AAAEC,EAAAA,WAAW,EAAE;AAAf,CAApB,E,CAA4C;;;AAC5C,IAAMC,SAAS,GAAG,CAAC,QAAD,EAAW,gBAAX,CAAlB,C,CAA+C;;AAC/C,IAAMC,YAAY,GAAG,EAArB;;AACAC,gBAAOC,UAAP;AAAA,mFAAkB,iBAAMC,EAAN,EAAUC,IAAV,EAAgBC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBT,+BAAUU,KAAV;;AACAC,YAAAA,QAAQ,CAACC,KAAT,GAAiB,2BAAaL,EAAE,CAACM,IAAH,CAAQD,KAArB,CAAjB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACME,YAAAA,QAVU,GAUCC,cAAc,CAACC,OAAf,CAAuB,eAAvB,CAVD;;AAWhB,gBAAIF,QAAJ,EAAc;AACZ,kBAAIP,EAAE,CAACU,IAAH,KAAY,QAAhB,EAA0B;AACxBR,gBAAAA,IAAI,CAAC;AAAEQ,kBAAAA,IAAI,EAAE;AAAR,iBAAD,CAAJ,CADwB,CAExB;;AACAjB,mCAAUkB,IAAV;AACD,eAJD,MAIO;AACL;AACA;AACAT,gBAAAA,IAAI;AACJ;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACF;AACC;AACF,aA9BD,MA8BO;AACL,kBAAIN,SAAS,CAACgB,OAAV,CAAkBZ,EAAE,CAACU,IAArB,MAA+B,CAAC,CAApC,EAAuC;AACrCR,gBAAAA,IAAI;AACL,eAFD,MAEO;AACLA,gBAAAA,IAAI,CAAC;AAAEQ,kBAAAA,IAAI,EAAE;AAAR,iBAAD,CAAJ,CADK,CAEL;;AACAjB,mCAAUkB,IAAV;AACD;AACF;;AAjDe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA;;AAoDAb,gBAAOe,SAAP,CAAiB,YAAM;AACrB;AACApB,qBAAUkB,IAAV;AACD,CAHD","sourcesContent":["import router from './router'\n// import store from './store'\n// import { Message } from 'element-ui'\nimport NProgress from 'nprogress' // progress bar\nimport 'nprogress/nprogress.css' // progress bar style\nimport getPageTitle from '@/utils/get-page-title'\n\nNProgress.configure({ showSpinner: false }) // NProgress Configuration\nconst whiteList = ['/login', '/auth-redirect'] // no redirect whitelist\nconst accessRoutes = []\nrouter.beforeEach(async(to, from, next) => {\n  NProgress.start()\n  document.title = getPageTitle(to.meta.title)\n  /* z注释 start */\n  // if (accessRoutes.length === 0) {\n  //   accessRoutes = await store.dispatch('permission/generateRoutes', [])\n  //   router.addRoutes(accessRoutes)\n  // }\n  // next()\n  /* z注释 end*/\n  const hasToken = sessionStorage.getItem('kongshentoken')\n  if (hasToken) {\n    if (to.path === '/login') {\n      next({ path: '/' })\n      // next({ path: '/login' })\n      NProgress.done()\n    } else {\n      // accessRoutes = JSON.parse(localStorage.getItem('routers'))\n      // router.addRoutes(accessRoutes)\n      next()\n      /* z注释 start */\n      /* 替换新的逻辑，当前路由和返回的menulist递归对比，看是否存在menulist中，若存在则继续，不存在则跳到404或登录*/\n      // const hasRoles = store.getters.roles && store.getters.roles.length > 0\n      // if (hasRoles) {\n      //   next()\n      // } else {\n      //   next()\n      //   // try {\n      //   //   const { roles } = await store.dispatch('user/getInfo')\n      //   //   const accessRoutes = await store.dispatch('permission/generateRoutes', roles)\n      //   //   router.addRoutes(accessRoutes)\n      //   //   next({ ...to, replace: true })\n      //   // } catch (error) {\n      //   //   await store.dispatch('user/resetToken')\n      //   //   Message.error(error || 'Has Error')\n      //   //   next(`/login?redirect=${to.path}`)\n      //   //   NProgress.done()\n      //   // }\n      // }\n    /* z注释 end*/\n    }\n  } else {\n    if (whiteList.indexOf(to.path) !== -1) {\n      next()\n    } else {\n      next({ path: '/login' })\n      // next(`/login?redirect=${to.path}`)\n      NProgress.done()\n    }\n  }\n})\n\nrouter.afterEach(() => {\n  // finish progress bar\n  NProgress.done()\n})\n"]}]}