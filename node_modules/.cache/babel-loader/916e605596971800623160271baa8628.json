{"remainingRequest":"C:\\Users\\小没没\\Desktop\\zhihuiks\\lvshipingtai\\frontend-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\小没没\\Desktop\\zhihuiks\\lvshipingtai\\frontend-web\\src\\api\\axios-util.js","dependencies":[{"path":"C:\\Users\\小没没\\Desktop\\zhihuiks\\lvshipingtai\\frontend-web\\src\\api\\axios-util.js","mtime":1605238540907},{"path":"C:\\Users\\小没没\\Desktop\\zhihuiks\\lvshipingtai\\frontend-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\小没没\\Desktop\\zhihuiks\\lvshipingtai\\frontend-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from 'axios';\nimport qs from 'qs';\nimport { Message } from 'element-ui';\nimport store from '@/store';\n\nvar $axios = function $axios(options) {\n  return new Promise(function (resolve, reject) {\n    // 默认配置 axios 实例\n    var instance = axios.create({\n      baseURL: process.env.VUE_APP_BASE_API,\n      // 默认请求 ip\n      headers: {\n        // 默认 json 请求\n        'Content-Type': 'application/json;charset=UTF-8'\n      },\n      // timeout: process.env.VUE_APP_Timeout, // 请求时间\n      paramsSerializer: function paramsSerializer(params) {\n        // 序列化函数\n        return qs.stringify(params);\n      }\n    }); // 请求配置\n\n    instance.interceptors.request.use(function (config) {\n      // 请求开始的时候可以修改默认配置选项\n      // console.log('请求前拦截', config);\n      // 可以配置header的token等验证信息\n      // config.headers['organizationId'] = organizationId;\n      if (localStorage.getItem('gettoken')) {\n        config.headers['token'] = localStorage.getItem('gettoken');\n      }\n\n      return config;\n    }, function (error) {\n      return Promise.reject(error);\n    }); // 响应配置\n\n    instance.interceptors.response.use(function (response) {\n      // debugger\n      var resData; // console.log(response)\n\n      if (response.data === undefined) {\n        resData = JSON.parse(response.request.responseText);\n      } else {\n        resData = response.data;\n      }\n\n      if (resData.code) {\n        if (resData.code !== 200) {// Message({ message: resData.message })\n        }\n      }\n\n      return resData;\n    }, function (error) {\n      // console.log(error)\n      if (error && error.response) {\n        // 根据业务写具体的报错信息\n        switch (error.response.status) {\n          case 400:\n            error.response.data.message = '错误请求';\n            break;\n        }\n      }\n\n      if (error.message) {\n        // 错误提示弹框\n        Message({\n          message: error.message\n        });\n      }\n\n      return Promise.reject(error.message);\n    }); // 请求处理\n\n    instance(options).then(function (res) {\n      resolve(res);\n    }).catch(function (error) {\n      reject(error);\n    });\n  });\n}; // 导出常用请求方法\n\n\nexport function $get(url, params) {\n  return $axios({\n    url: url,\n    method: 'get',\n    data: params\n  });\n}\nexport function $post(url, params) {\n  return $axios({\n    url: url,\n    method: 'post',\n    data: params\n  });\n}\nexport function $pput(url, params) {\n  return $axios({\n    url: url,\n    method: 'put',\n    data: params\n  });\n}\nexport function $delete(url, params) {\n  return $axios({\n    url: url,\n    method: 'delete',\n    data: params\n  });\n}\nexport function $put(url, params) {\n  return $axios({\n    url: url,\n    method: 'put',\n    data: params,\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n    }\n  });\n}\nexport function $up(url, params) {\n  return $axios({\n    url: url,\n    method: 'post',\n    data: params,\n    headers: {\n      'Content-Type': 'multipart/form-data;charset=UTF-8'\n    }\n  });\n}\nexport default $axios;",null]}