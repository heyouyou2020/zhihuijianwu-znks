{"remainingRequest":"C:\\Users\\小没没\\Desktop\\cxl\\runboo01\\frontend-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\小没没\\Desktop\\cxl\\runboo01\\frontend-web\\src\\components\\Charts\\GradientBar.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\小没没\\Desktop\\cxl\\runboo01\\frontend-web\\src\\components\\Charts\\GradientBar.vue","mtime":1600928645034},{"path":"C:\\Users\\小没没\\Desktop\\cxl\\runboo01\\frontend-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\小没没\\Desktop\\cxl\\runboo01\\frontend-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\小没没\\Desktop\\cxl\\runboo01\\frontend-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\小没没\\Desktop\\cxl\\runboo01\\frontend-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n\r\nimport echarts from 'echarts'\r\nimport resize from './mixins/resize'\r\n\r\nexport default {\r\n  mixins: [resize],\r\n  props: {\r\n    chartData: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    xAxisData: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    // 是否展示图例 默认不展示\r\n    isShowLegend: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    colorArr: {\r\n      type: Array,\r\n      default: function() {\r\n        return [{ top: '#4185ef', bottom: 'rgba(65, 133, 239, 0.1)' }, { top: '#ffbe3f', bottom: 'rgba(255, 190, 63, 0.1)' }, { top: '#38d7b7', bottom: 'rgba(56, 215, 183, 0.1)' }, { top: '#ffbe3f', bottom: 'rgba(255, 190, 63, 0.1)' }, { top: '#4185ef', bottom: 'rgba(65, 133, 239, 0.1)' }, { top: '#38d7b7', bottom: 'rgba(56, 215, 183, 0.1)' }]\r\n      },\r\n    },\r\n    className: {\r\n      type: String,\r\n      default: 'chart'\r\n    },\r\n    id: {\r\n      type: String,\r\n      default: 'chart'\r\n    },\r\n    width: {\r\n      type: String,\r\n      default: '200px'\r\n    },\r\n    height: {\r\n      type: String,\r\n      default: '200px'\r\n    },\r\n    titleText: {\r\n      type: String,\r\n      default: '案件数'\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      chart: null\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initChart()\r\n  },\r\n  beforeDestroy() {\r\n    if (!this.chart) {\r\n      return\r\n    }\r\n    this.chart.dispose()\r\n    this.chart = null\r\n  },\r\n  methods: {\r\n    initChart() {\r\n      const _this = this\r\n      this.chart = echarts.init(document.getElementById(this.id))\r\n      const seriesData = []\r\n      const legendData = []\r\n      this.chartData.forEach((item, index) => {\r\n        legendData.push(item.name)\r\n        seriesData.push({\r\n          name: item.name,\r\n          type: item.type || 'bar',\r\n          barGap: '10%',\r\n          barMinWidth: 8,\r\n          barMaxWidth: 14,\r\n          data: item.data,\r\n          itemStyle: {\r\n            normal: {\r\n              color: function(params) {\r\n                return new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                  offset: 0,\r\n                  color: _this.colorArr[index].top // 0% 处的颜色\r\n                }, {\r\n                  offset: 1,\r\n                  color: _this.colorArr[index].bottom// 100% 处的颜色\r\n                }], false)\r\n              },\r\n              barBorderRadius: [10, 10, 0, 0]\r\n            },\r\n          }\r\n        })\r\n      })\r\n      this.chart.setOption({\r\n        title: {\r\n          top: 0,\r\n          text: _this.titleText,\r\n          textStyle: {\r\n            fontWeight: 'normal',\r\n            fontSize: 16,\r\n            color: '#53668d'\r\n          },\r\n          left: '1%'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: { // 坐标轴指示器，坐标轴触发有效\r\n            type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\r\n          },\r\n        },\r\n        legend: {\r\n          show: _this.isShowLegend,\r\n          top: 6,\r\n          icon: 'rect',\r\n          itemWidth: 14,\r\n          itemHeight: 5,\r\n          itemGap: 13,\r\n          data: legendData,\r\n          left: 'center',\r\n          textStyle: {\r\n            fontSize: 12,\r\n            color: '#4f5e7b'\r\n          }\r\n        },\r\n        grid: {\r\n          top: 50,\r\n          left: '2%',\r\n          right: '2%',\r\n          bottom: 0,\r\n          containLabel: true\r\n        },\r\n        xAxis: [{\r\n          type: 'category',\r\n          boundaryGap: true,\r\n          snap: true,\r\n          axisTick: {\r\n            show: false\r\n          },\r\n          axisLabel: {\r\n            interval: 0,\r\n            rotate: 50,\r\n          },\r\n          axisLine: {\r\n            show: false,\r\n            lineStyle: {\r\n              color: '#53668d'\r\n            }\r\n          },\r\n          data: _this.xAxisData\r\n        }],\r\n        yAxis: [{\r\n          type: 'value',\r\n          axisTick: {\r\n            show: false\r\n          },\r\n          splitLine: {\r\n            lineStyle: {\r\n              color: '#f0f0f0'\r\n            }\r\n          },\r\n          axisLine: {\r\n            show: false,\r\n            lineStyle: {\r\n              color: '#53668d'\r\n            }\r\n          },\r\n          axisLabel: {\r\n            inside: false,\r\n            formatter: '{value}\\n'\r\n          }\r\n        }],\r\n        series: seriesData\r\n      })\r\n      this.chart.on('click', (params) => {\r\n        this.$emit('clickBar', params)\r\n      })\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["GradientBar.vue"],"names":[],"mappings":";;;;;AAKA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"GradientBar.vue","sourceRoot":"src/components/Charts","sourcesContent":["<template>\r\n  <div :id=\"id\" :class=\"className\" :style=\"{height:height,width:width}\" />\r\n</template>\r\n// 渐变柱形图\r\n<script>\r\nimport echarts from 'echarts'\r\nimport resize from './mixins/resize'\r\n\r\nexport default {\r\n  mixins: [resize],\r\n  props: {\r\n    chartData: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    xAxisData: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    // 是否展示图例 默认不展示\r\n    isShowLegend: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    colorArr: {\r\n      type: Array,\r\n      default: function() {\r\n        return [{ top: '#4185ef', bottom: 'rgba(65, 133, 239, 0.1)' }, { top: '#ffbe3f', bottom: 'rgba(255, 190, 63, 0.1)' }, { top: '#38d7b7', bottom: 'rgba(56, 215, 183, 0.1)' }, { top: '#ffbe3f', bottom: 'rgba(255, 190, 63, 0.1)' }, { top: '#4185ef', bottom: 'rgba(65, 133, 239, 0.1)' }, { top: '#38d7b7', bottom: 'rgba(56, 215, 183, 0.1)' }]\r\n      },\r\n    },\r\n    className: {\r\n      type: String,\r\n      default: 'chart'\r\n    },\r\n    id: {\r\n      type: String,\r\n      default: 'chart'\r\n    },\r\n    width: {\r\n      type: String,\r\n      default: '200px'\r\n    },\r\n    height: {\r\n      type: String,\r\n      default: '200px'\r\n    },\r\n    titleText: {\r\n      type: String,\r\n      default: '案件数'\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      chart: null\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initChart()\r\n  },\r\n  beforeDestroy() {\r\n    if (!this.chart) {\r\n      return\r\n    }\r\n    this.chart.dispose()\r\n    this.chart = null\r\n  },\r\n  methods: {\r\n    initChart() {\r\n      const _this = this\r\n      this.chart = echarts.init(document.getElementById(this.id))\r\n      const seriesData = []\r\n      const legendData = []\r\n      this.chartData.forEach((item, index) => {\r\n        legendData.push(item.name)\r\n        seriesData.push({\r\n          name: item.name,\r\n          type: item.type || 'bar',\r\n          barGap: '10%',\r\n          barMinWidth: 8,\r\n          barMaxWidth: 14,\r\n          data: item.data,\r\n          itemStyle: {\r\n            normal: {\r\n              color: function(params) {\r\n                return new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                  offset: 0,\r\n                  color: _this.colorArr[index].top // 0% 处的颜色\r\n                }, {\r\n                  offset: 1,\r\n                  color: _this.colorArr[index].bottom// 100% 处的颜色\r\n                }], false)\r\n              },\r\n              barBorderRadius: [10, 10, 0, 0]\r\n            },\r\n          }\r\n        })\r\n      })\r\n      this.chart.setOption({\r\n        title: {\r\n          top: 0,\r\n          text: _this.titleText,\r\n          textStyle: {\r\n            fontWeight: 'normal',\r\n            fontSize: 16,\r\n            color: '#53668d'\r\n          },\r\n          left: '1%'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: { // 坐标轴指示器，坐标轴触发有效\r\n            type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\r\n          },\r\n        },\r\n        legend: {\r\n          show: _this.isShowLegend,\r\n          top: 6,\r\n          icon: 'rect',\r\n          itemWidth: 14,\r\n          itemHeight: 5,\r\n          itemGap: 13,\r\n          data: legendData,\r\n          left: 'center',\r\n          textStyle: {\r\n            fontSize: 12,\r\n            color: '#4f5e7b'\r\n          }\r\n        },\r\n        grid: {\r\n          top: 50,\r\n          left: '2%',\r\n          right: '2%',\r\n          bottom: 0,\r\n          containLabel: true\r\n        },\r\n        xAxis: [{\r\n          type: 'category',\r\n          boundaryGap: true,\r\n          snap: true,\r\n          axisTick: {\r\n            show: false\r\n          },\r\n          axisLabel: {\r\n            interval: 0,\r\n            rotate: 50,\r\n          },\r\n          axisLine: {\r\n            show: false,\r\n            lineStyle: {\r\n              color: '#53668d'\r\n            }\r\n          },\r\n          data: _this.xAxisData\r\n        }],\r\n        yAxis: [{\r\n          type: 'value',\r\n          axisTick: {\r\n            show: false\r\n          },\r\n          splitLine: {\r\n            lineStyle: {\r\n              color: '#f0f0f0'\r\n            }\r\n          },\r\n          axisLine: {\r\n            show: false,\r\n            lineStyle: {\r\n              color: '#53668d'\r\n            }\r\n          },\r\n          axisLabel: {\r\n            inside: false,\r\n            formatter: '{value}\\n'\r\n          }\r\n        }],\r\n        series: seriesData\r\n      })\r\n      this.chart.on('click', (params) => {\r\n        this.$emit('clickBar', params)\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}