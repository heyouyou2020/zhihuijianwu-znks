{"remainingRequest":"C:\\Users\\小没没\\Desktop\\cxl\\runboo01\\frontend-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\小没没\\Desktop\\cxl\\runboo01\\frontend-web\\src\\layout\\components\\Sidebar\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\小没没\\Desktop\\cxl\\runboo01\\frontend-web\\src\\layout\\components\\Sidebar\\index.vue","mtime":1603165214066},{"path":"C:\\Users\\小没没\\Desktop\\cxl\\runboo01\\frontend-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\小没没\\Desktop\\cxl\\runboo01\\frontend-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\小没没\\Desktop\\cxl\\runboo01\\frontend-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\小没没\\Desktop\\cxl\\runboo01\\frontend-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters } from 'vuex'\nimport { getUserId } from '@/utils/auth'\nimport Logo from './Logo'\nimport SidebarItem from './SidebarItem'\nimport variables from '@/styles/variables.scss'\nimport { constantRoutes } from '@/router/index'\nexport default {\n  components: { SidebarItem, Logo },\n  computed: {\n    ...mapGetters(['sidebar']),\n    routers() {\n      return constantRoutes // JSON.parse(localStorage.getItem('menuList'))\n    },\n    activeMenu() {\n      const route = this.$route\n      const { meta, path } = route\n      // if set path, the sidebar will highlight the path you set\n      if (meta.activeMenu) {\n        return meta.activeMenu\n      }\n      return path\n    },\n    showLogo() {\n      return this.$store.state.settings.sidebarLogo\n    },\n    variables() {\n      return variables\n    },\n    isCollapse() {\n      // return !this.sidebar.opened\n      return false\n    }\n  },\n  data() {\n    return {\n      // routers: []\n    }\n  },\n  created() {\n    // this.routers = JSON.parse(localStorage.getItem('menuList'))\n    // this.getMenuLlist()废弃\n  },\n  methods: {\n    getMenuLlist() {\n      debugger\n      const params = {\n        userid: getUserId()\n      }\n      console.log(params)\n      this.$api.getUserMenuList(params).then(response => {\n        this.routers = response.data\n      })\n    }\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/layout/components/Sidebar","sourcesContent":["<template>\n  <div :class=\"{ 'has-logo': showLogo }\">\n    <logo v-if=\"showLogo\" :collapse=\"isCollapse\" />\n    <el-scrollbar wrap-class=\"scrollbar-wrapper\">\n      <el-menu\n        :default-active=\"activeMenu\"\n        :collapse=\"isCollapse\"\n        :text-color=\"variables.menuText\"\n        :unique-opened=\"false\"\n        :active-text-color=\"variables.menuActiveText\"\n        :collapse-transition=\"false\"\n        mode=\"vertical\"\n      >\n        <!--        :background-color=\"variables.menuBg\"-->\n        <sidebar-item\n          v-for=\"route in routers\"\n          :key=\"route.path\"\n          :item=\"route\"\n          :base-path=\"route.path\"\n        />\n      </el-menu>\n    </el-scrollbar>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport { getUserId } from '@/utils/auth'\nimport Logo from './Logo'\nimport SidebarItem from './SidebarItem'\nimport variables from '@/styles/variables.scss'\nimport { constantRoutes } from '@/router/index'\nexport default {\n  components: { SidebarItem, Logo },\n  computed: {\n    ...mapGetters(['sidebar']),\n    routers() {\n      return constantRoutes // JSON.parse(localStorage.getItem('menuList'))\n    },\n    activeMenu() {\n      const route = this.$route\n      const { meta, path } = route\n      // if set path, the sidebar will highlight the path you set\n      if (meta.activeMenu) {\n        return meta.activeMenu\n      }\n      return path\n    },\n    showLogo() {\n      return this.$store.state.settings.sidebarLogo\n    },\n    variables() {\n      return variables\n    },\n    isCollapse() {\n      // return !this.sidebar.opened\n      return false\n    }\n  },\n  data() {\n    return {\n      // routers: []\n    }\n  },\n  created() {\n    // this.routers = JSON.parse(localStorage.getItem('menuList'))\n    // this.getMenuLlist()废弃\n  },\n  methods: {\n    getMenuLlist() {\n      debugger\n      const params = {\n        userid: getUserId()\n      }\n      console.log(params)\n      this.$api.getUserMenuList(params).then(response => {\n        this.routers = response.data\n      })\n    }\n  }\n}\n</script>\n<style>\n.el-menu-item,\n.el-submenu__title {\n  height: 36px !important;\n  line-height: 36px !important;\n}\n.el-menu-item.is-active {\n  background-color: #0f51b4 !important;\n}\n.el-submenu__title i {\n  color: #fff;\n}\n.el-icon-arrow-down:before {\n  content: '\\e790';\n}\n.el-submenu > .el-submenu__title .el-submenu__icon-arrow {\n  -webkit-transform: rotateZ(-90deg);\n  -ms-transform: rotate(-90deg);\n  transform: rotateZ(-90deg);\n}\n.el-submenu.is-opened > .el-submenu__title .el-submenu__icon-arrow {\n  -webkit-transform: rotateZ(0deg);\n  -ms-transform: rotate(0deg);\n  transform: rotateZ(0deg);\n}\n.el-menu-item i {\n  color: inherit;\n}\n</style>\n"]}]}